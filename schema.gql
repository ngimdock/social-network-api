# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Article {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  image: String!
}

type ArticleCreateOutput {
  article: Article!
}

type ArticleUpdateOutput {
  article: Article!
}

type ArticleDeleteOutput {
  id: ID!
}

type ArticlePagination {
  totalCount: Float!
  nodes: [Article!]!
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  firstName: String!
  lastName: String!
  avatar: String
}

type UserCreateOutput {
  user: User!
}

type Tokens {
  access_token: String!
  refresh_token: String!
}

type AuthOutput {
  tokens: Tokens!
}

type Query {
  sayHello: String!
  findMe: UserCreateOutput!
  articlesPaginated(skip: Int!, take: Int!, sortBy: ArticlePaginationSortBy): ArticlePagination!
}

input ArticlePaginationSortBy {
  createdAt: sortDirection
  title: sortDirection
}

enum sortDirection {
  ASC
  DESC
}

type Mutation {
  localRegister(input: AuthRegisterInput!): AuthOutput!
  localLogin(input: AuthLoginInput!): AuthOutput!
  articleCreate(input: ArticleCreateInput!): ArticleCreateOutput!
  articleUpdate(articleId: ID!, updateInput: ArticleUpdateInput!): ArticleUpdateOutput!
  articleDelete(articleId: ID!): ArticleDeleteOutput!
}

input AuthRegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input AuthLoginInput {
  email: String!
  password: String!
}

input ArticleCreateInput {
  title: String!
  description: String!
  image: String!
}

input ArticleUpdateInput {
  title: String!
  description: String!
  image: String!
}